//    CharMaskFourteen


namespace Leguar.SegmentDisplay {

	internal class CharMaskFourteen {

		private const string characters="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ _\"'`´’\u00B0|()[]<>*^+-=/\\~#%&@.,:;?\u0024\u20AC\u00A3\u00A5\u20BD";

		private static readonly string[] masks = new string[] {
			"11111100000000","01100000001000","11011011000000","11110001000000","01100111000000","10110111000000","10111111000000","11100000000000","11111111000000","11110111000000", // 0-9
			"11101111000000","11110001010010","10011100000000","11110000010010","10011110000000","10001110000000","10111101000000","01101111000000","10010000010010","01111000000000", // A-J
			"00001110001100","00011100000000","01101100101000","01101100100100","11111100000000","11001111000000","11111100000100","11001111000100","10110111000000","10000000010010", // K-T
			"01111100000000","00001100001001","01101100000101","00000000101101","00000000101010","10010000001001", // U-Z
			"00000000000000","00010000000000","00000100010000","00000000010000","00000000100000","00000000001000","00000000001000","11000111000000","00000000010010", //  _"'`´’°|
			"10011100000000","11110000000000","10011100000000","11110000000000","00000000001100","00000000100001", // ()[]<>
			"00000011111111","00000100100000","00000011010010","00000011000000","00010011000000","00000000001001","00000000100100", // *^+-=/\
			"00000100101000","00001111010010","00100100001001","10011010101100","11011101001000","00000000000010","00000000000001","00000000010010","00000000010001","11000001000010", // ~#%&@.,:;?
			"10110111010010","10011111100001","11011110000000","00000011101010","11001111100001" // $€£¥₽
		};

		internal static string getCharMask(SegmentDisplay segmentDisplay, char chr) {

			chr=char.ToUpper(chr);

			if (chr=='0' && segmentDisplay.Mod_S14S16_Zero) {
				return "11111100001001";
			}
			if (chr=='1' && segmentDisplay.Mod_S14S16_One) {
				return "01100000000000";
			}
			if (chr=='6' && segmentDisplay.Mod_S7S14_SixNine) {
				return "00111111000000";
			}
			if (chr=='7' && segmentDisplay.Mod_S14S16_Seven) {
				return "10000000001001";
			}
			if (chr=='9' && segmentDisplay.Mod_S7S14_SixNine) {
				return "11100111000000";
			}

			int index=characters.IndexOf(chr);
			if (index>=0) {
				return masks[index];
			}

			return null;

		}

	}

}
